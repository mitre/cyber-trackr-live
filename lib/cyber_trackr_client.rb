# frozen_string_literal: true

# #Cyber Trackr API
#
# Complete OpenAPI 3.1.1 specification for cyber.trackr.live API. This API provides access to DISA STIGs, SRGs, RMF controls, CCIs, and SCAP data.  ## DISA Cybersecurity Ecosystem Hierarchy  ``` NIST RMF Controls (high-level policy framework)     ↓ (decomposed into atomic, testable statements) CCIs (Control Correlation Identifiers - bridge policy to implementation)     ↓ (grouped by technology class into generic requirements)   SRGs (Security Requirements Guides - technology class \"what\" to do)     ↓ (implemented as vendor-specific \"how\" to do it) STIGs (Security Technical Implementation Guides - vendor/product specific)     ↓ (automated versions for scanning tools) SCAP (Security Content Automation Protocol documents) ```  ## Critical Relationships  - **RMF Controls** contain assessment procedures that reference **CCIs** - **CCIs** map back to **RMF Controls** and forward to **STIG/SRG requirements** - **SRGs** define generic technology requirements that **STIGs** implement specifically - **V-IDs** can appear in both SRG and corresponding STIG (same requirement, different specificity) - **SV-IDs** are XCCDF rule identifiers with revision tracking across document releases
#
# The version of the OpenAPI document: 1.0.0
#
# Generated by: https://openapi-generator.tech
# Generator version: 7.14.0
#

# Common files
require 'cyber_trackr_client/api_client'
require 'cyber_trackr_client/api_error'
require 'cyber_trackr_client/version'
require 'cyber_trackr_client/configuration'

# Models
require 'cyber_trackr_client/models/api_documentation'
require 'cyber_trackr_client/models/assessment_procedure'
require 'cyber_trackr_client/models/cci_detail'
require 'cyber_trackr_client/models/document_detail'
require 'cyber_trackr_client/models/document_version'
require 'cyber_trackr_client/models/error'
require 'cyber_trackr_client/models/requirement_detail'
require 'cyber_trackr_client/models/requirement_summary'
require 'cyber_trackr_client/models/rmf_control_detail'
require 'cyber_trackr_client/models/rmf_control_list'

# APIs
require 'cyber_trackr_client/api/api_documentation_api'
require 'cyber_trackr_client/api/cci_api'
require 'cyber_trackr_client/api/documents_api'
require 'cyber_trackr_client/api/rmf_controls_api'
require 'cyber_trackr_client/api/scap_api'

module CyberTrackrClient
  class << self
    # Customize default settings for the SDK using block.
    #   CyberTrackrClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
