import{_ as t,C as l,c as r,o as s,at as a,b as h,w as i,a as o,G as p,au as c}from"./chunks/framework.BV4VMCSO.js";const C=JSON.parse('{"title":"Release Process","description":"","frontmatter":{},"headers":[],"relativePath":"RELEASE_PROCESS.md","filePath":"RELEASE_PROCESS.md"}'),d={name:"RELEASE_PROCESS.md"};function k(g,e,u,b,y,F){const n=l("Mermaid");return s(),r("div",null,[e[1]||(e[1]=a('<h1 id="release-process" tabindex="-1">Release Process <a class="header-anchor" href="#release-process" aria-label="Permalink to &quot;Release Process&quot;">​</a></h1><p>This document describes the release process for the cyber-trackr-live project.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The cyber-trackr-live project uses an OpenAPI-first release process where the OpenAPI specification serves as the single source of truth for versioning. All other components (Ruby gem, documentation, package.json) are synchronized from this source.</p><h2 id="project-architecture" tabindex="-1">Project Architecture <a class="header-anchor" href="#project-architecture" aria-label="Permalink to &quot;Project Architecture&quot;">​</a></h2>',5)),(s(),h(c,null,{default:i(()=>[p(n,{id:"mermaid-15",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BOpenAPI%20Spec%3Cbr%2F%3Eopenapi%2Fopenapi.yaml%3Cbr%2F%3ESOURCE%20OF%20TRUTH%5D%20--%3E%20B%5BGenerate%20Ruby%20Client%3Cbr%2F%3Elib%2Fcyber_trackr_client%2F%5D%0A%20%20%20%20A%20--%3E%20C%5BGenerate%20Documentation%3Cbr%2F%3Esite%2Findex.html%5D%0A%20%20%20%20A%20--%3E%20D%5BSync%20package.json%3Cbr%2F%3Eversion%20field%5D%0A%20%20%20%20B%20--%3E%20E%5BBuild%20Ruby%20Gem%3Cbr%2F%3Ecyber_trackr_live.gem%5D%0A%20%20%20%20C%20--%3E%20F%5BDeploy%20to%20GitHub%20Pages%5D%0A%20%20%20%20E%20--%3E%20G%5BPublish%20to%20RubyGems.org%5D%0A"})]),fallback:i(()=>e[0]||(e[0]=[o(" Loading... ")])),_:1})),e[2]||(e[2]=a(`<h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ol><li><p><strong>Ensure you&#39;re on the main branch and up to date</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Should show no changes</span></span></code></pre></div></li><li><p><strong>Ensure all tests pass</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rubocop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:validate</span></span></code></pre></div></li><li><p><strong>Verify Docker is available</strong> (for client generation):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div></li><li><p><strong>Verify trusted publishing is configured</strong> on RubyGems.org:</p><ul><li>Go to <a href="https://rubygems.org/gems/cyber_trackr_live/trusted_publishers" target="_blank" rel="noreferrer">https://rubygems.org/gems/cyber_trackr_live/trusted_publishers</a></li><li>Should show: GitHub Repository: <code>mitre/cyber-trackr-live</code>, Workflow: <code>release.yml</code></li></ul></li></ol><h2 id="release-workflow" tabindex="-1">Release Workflow <a class="header-anchor" href="#release-workflow" aria-label="Permalink to &quot;Release Workflow&quot;">​</a></h2><h3 id="_1-choose-version-bump-type" tabindex="-1">1. Choose Version Bump Type <a class="header-anchor" href="#_1-choose-version-bump-type" aria-label="Permalink to &quot;1. Choose Version Bump Type&quot;">​</a></h3><p>Decide on the version bump based on <a href="https://semver.org/" target="_blank" rel="noreferrer">Semantic Versioning</a>:</p><ul><li><strong>Patch</strong> (1.0.0 → 1.0.1): Bug fixes, minor OpenAPI updates</li><li><strong>Minor</strong> (1.0.0 → 1.1.0): New endpoints, new features, backward compatible</li><li><strong>Major</strong> (1.0.0 → 2.0.0): Breaking API changes, incompatible updates</li></ul><h3 id="_2-prepare-the-release" tabindex="-1">2. Prepare the Release <a class="header-anchor" href="#_2-prepare-the-release" aria-label="Permalink to &quot;2. Prepare the Release&quot;">​</a></h3><p>Execute the appropriate rake task to prepare the release:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For patch release (bug fixes, minor updates)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release:patch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For minor release (new features, new endpoints)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release:minor</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For major release (breaking changes)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release:major</span></span></code></pre></div><p>This rake task will automatically:</p><ul><li>✅ Update <code>openapi/openapi.yaml</code> with the new version (SOURCE OF TRUTH)</li><li>✅ Sync <code>package.json</code> version from OpenAPI spec</li><li>✅ Regenerate Ruby client with <code>make generate</code></li><li>✅ Update <code>Gemfile.lock</code> with the new version</li><li>✅ Validate version consistency across all files</li><li>✅ Run all tests to ensure everything works</li><li>✅ Run linting to ensure code quality</li><li>✅ Update both <code>CHANGELOG-OPENAPI.md</code> and <code>CHANGELOG-GEM.md</code></li><li>✅ Create release notes in <code>docs/release-notes/v{version}.md</code></li><li>✅ Regenerate documentation with <code>npm run docs:build</code></li><li>✅ Commit all changes with message &quot;Bump version to {version}&quot;</li></ul><h3 id="_3-review-changes" tabindex="-1">3. Review Changes <a class="header-anchor" href="#_3-review-changes" aria-label="Permalink to &quot;3. Review Changes&quot;">​</a></h3><p>Before releasing, review what was changed:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Review the commit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check version consistency</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version_check</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check the updated changelogs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHANGELOG-OPENAPI.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHANGELOG-GEM.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check the release notes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/release-notes/v{version}.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verify documentation was regenerated</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> site/</span></span></code></pre></div><h3 id="_4-push-changes" tabindex="-1">4. Push Changes <a class="header-anchor" href="#_4-push-changes" aria-label="Permalink to &quot;4. Push Changes&quot;">​</a></h3><p>Push your commits to GitHub:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><h3 id="_5-create-tag-and-publish" tabindex="-1">5. Create Tag and Publish <a class="header-anchor" href="#_5-create-tag-and-publish" aria-label="Permalink to &quot;5. Create Tag and Publish&quot;">​</a></h3><p>Use our custom release process:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span></span></code></pre></div><p>This will:</p><ul><li>✅ Create tag <code>v{version}</code></li><li>✅ Push the tag to GitHub</li><li>⏭️ Trigger GitHub Actions to build and publish everything</li></ul><h3 id="_6-automated-publication" tabindex="-1">6. Automated Publication <a class="header-anchor" href="#_6-automated-publication" aria-label="Permalink to &quot;6. Automated Publication&quot;">​</a></h3><p>Once the tag is pushed, GitHub Actions will automatically:</p><ol><li>Run the full test suite</li><li>Validate OpenAPI specification</li><li>Run security audits</li><li>Run linting checks</li><li>Deploy documentation to GitHub Pages</li><li>Create a GitHub Release using the pre-generated release notes</li><li>Build the gem</li><li>Publish to RubyGems.org using trusted publishing (OIDC authentication)</li></ol><p>Monitor the release workflow at: <a href="https://github.com/mitre/cyber-trackr-live/actions" target="_blank" rel="noreferrer">https://github.com/mitre/cyber-trackr-live/actions</a></p><h2 id="version-management" tabindex="-1">Version Management <a class="header-anchor" href="#version-management" aria-label="Permalink to &quot;Version Management&quot;">​</a></h2><h3 id="single-source-of-truth" tabindex="-1">Single Source of Truth <a class="header-anchor" href="#single-source-of-truth" aria-label="Permalink to &quot;Single Source of Truth&quot;">​</a></h3><p><strong><code>openapi/openapi.yaml</code></strong> is the ONLY place where version should be manually updated:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Change ONLY here</span></span></code></pre></div><h3 id="automatic-synchronization" tabindex="-1">Automatic Synchronization <a class="header-anchor" href="#automatic-synchronization" aria-label="Permalink to &quot;Automatic Synchronization&quot;">​</a></h3><p>All other version references are automatically synchronized:</p><ul><li><strong><code>lib/cyber_trackr_client/version.rb</code></strong> - Generated by OpenAPI Generator</li><li><strong><code>cyber_trackr_live.gemspec</code></strong> - Reads from version.rb</li><li><strong><code>package.json</code></strong> - Synced by rake task</li><li><strong>Git tags</strong> - Created from OpenAPI version</li></ul><h3 id="version-consistency-validation" tabindex="-1">Version Consistency Validation <a class="header-anchor" href="#version-consistency-validation" aria-label="Permalink to &quot;Version Consistency Validation&quot;">​</a></h3><p>Before any build or release, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version_check</span></span></code></pre></div><p>This validates that all version references match the OpenAPI specification.</p><h2 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h2><h3 id="correct-order-for-changes" tabindex="-1">Correct Order for Changes <a class="header-anchor" href="#correct-order-for-changes" aria-label="Permalink to &quot;Correct Order for Changes&quot;">​</a></h3><ol><li><strong>Edit OpenAPI specification</strong> (<code>openapi/openapi.yaml</code>)</li><li><strong>Validate immediately</strong>: <code>npm run docs:validate</code></li><li><strong>If valid, regenerate everything</strong>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # Ruby client</span></span></code></pre></div></li><li><strong>Test the regenerated code</strong>: <code>bundle exec rake test</code></li><li><strong>Fix any issues and repeat from step 2</strong></li></ol><h3 id="when-making-api-changes" tabindex="-1">When Making API Changes <a class="header-anchor" href="#when-making-api-changes" aria-label="Permalink to &quot;When Making API Changes&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Edit the OpenAPI spec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openapi/openapi.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Validate immediately  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:validate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Regenerate client and docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. Test everything</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rubocop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 5. Commit changes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;feat: add new endpoint for XYZ&quot;</span></span></code></pre></div><h2 id="release-types-and-examples" tabindex="-1">Release Types and Examples <a class="header-anchor" href="#release-types-and-examples" aria-label="Permalink to &quot;Release Types and Examples&quot;">​</a></h2><h3 id="patch-release-1-0-0-→-1-0-1" tabindex="-1">Patch Release (1.0.0 → 1.0.1) <a class="header-anchor" href="#patch-release-1-0-0-→-1-0-1" aria-label="Permalink to &quot;Patch Release (1.0.0 → 1.0.1)&quot;">​</a></h3><ul><li>Bug fixes in helper code</li><li>Documentation improvements</li><li>Test improvements</li><li>Minor OpenAPI spec clarifications</li></ul><h3 id="minor-release-1-0-0-→-1-1-0" tabindex="-1">Minor Release (1.0.0 → 1.1.0) <a class="header-anchor" href="#minor-release-1-0-0-→-1-1-0" aria-label="Permalink to &quot;Minor Release (1.0.0 → 1.1.0)&quot;">​</a></h3><ul><li>New OpenAPI endpoints</li><li>New helper methods</li><li>New features (backward compatible)</li><li>Enhanced documentation</li></ul><h3 id="major-release-1-0-0-→-2-0-0" tabindex="-1">Major Release (1.0.0 → 2.0.0) <a class="header-anchor" href="#major-release-1-0-0-→-2-0-0" aria-label="Permalink to &quot;Major Release (1.0.0 → 2.0.0)&quot;">​</a></h3><ul><li>Breaking changes to OpenAPI spec</li><li>Removing deprecated endpoints</li><li>Major refactoring</li><li>Incompatible changes</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="working-directory-is-not-clean" tabindex="-1">&quot;Working directory is not clean&quot; <a class="header-anchor" href="#working-directory-is-not-clean" aria-label="Permalink to &quot;&quot;Working directory is not clean&quot;&quot;">​</a></h3><ul><li>Commit or stash your changes first</li><li>Run <code>git status</code> to see what&#39;s changed</li></ul><h3 id="must-be-on-main-branch" tabindex="-1">&quot;Must be on main branch&quot; <a class="header-anchor" href="#must-be-on-main-branch" aria-label="Permalink to &quot;&quot;Must be on main branch&quot;&quot;">​</a></h3><ul><li>Switch to main: <code>git checkout main</code></li><li>Ensure it&#39;s up to date: <code>git pull origin main</code></li></ul><h3 id="version-consistency-check-fails" tabindex="-1">Version consistency check fails <a class="header-anchor" href="#version-consistency-check-fails" aria-label="Permalink to &quot;Version consistency check fails&quot;">​</a></h3><ul><li>Something is out of sync</li><li>Run <code>bundle exec rake version_check</code> to see details</li><li>May need to regenerate client: <code>make generate</code></li></ul><h3 id="tests-failing-after-regeneration" tabindex="-1">Tests failing after regeneration <a class="header-anchor" href="#tests-failing-after-regeneration" aria-label="Permalink to &quot;Tests failing after regeneration&quot;">​</a></h3><ul><li>Check if OpenAPI spec has issues</li><li>Verify all required fields are present</li><li>Check that examples are valid</li></ul><h3 id="client-generation-fails" tabindex="-1">Client generation fails <a class="header-anchor" href="#client-generation-fails" aria-label="Permalink to &quot;Client generation fails&quot;">​</a></h3><ul><li>Ensure Docker is running</li><li>Check that OpenAPI spec is valid: <code>npm run docs:validate</code></li><li>Review generation logs for specific errors</li></ul><h3 id="github-actions-failing" tabindex="-1">GitHub Actions failing <a class="header-anchor" href="#github-actions-failing" aria-label="Permalink to &quot;GitHub Actions failing&quot;">​</a></h3><ul><li>Check the <a href="https://github.com/mitre/cyber-trackr-live/actions" target="_blank" rel="noreferrer">Actions tab</a></li><li>Ensure trusted publishing is configured on RubyGems.org</li><li>Verify all tests pass locally first</li></ul><h2 id="manual-steps-if-needed" tabindex="-1">Manual Steps (if needed) <a class="header-anchor" href="#manual-steps-if-needed" aria-label="Permalink to &quot;Manual Steps (if needed)&quot;">​</a></h2><h3 id="regenerate-client-manually" tabindex="-1">Regenerate Client Manually <a class="header-anchor" href="#regenerate-client-manually" aria-label="Permalink to &quot;Regenerate Client Manually&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre></div><h3 id="sync-package-json-version-manually" tabindex="-1">Sync Package.json Version Manually <a class="header-anchor" href="#sync-package-json-version-manually" aria-label="Permalink to &quot;Sync Package.json Version Manually&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get version from OpenAPI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruby</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ryaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;puts YAML.load_file(&#39;openapi/openapi.yaml&#39;)[&#39;info&#39;][&#39;version&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $VERSION </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--no-git-tag-version</span></span></code></pre></div><h3 id="create-github-release-manually" tabindex="-1">Create GitHub Release Manually <a class="header-anchor" href="#create-github-release-manually" aria-label="Permalink to &quot;Create GitHub Release Manually&quot;">​</a></h3><p>If the automated release fails:</p><ol><li>Go to <a href="https://github.com/mitre/cyber-trackr-live/releases/new" target="_blank" rel="noreferrer">https://github.com/mitre/cyber-trackr-live/releases/new</a></li><li>Choose the tag you just pushed</li><li>Copy content from <code>docs/release-notes/v{version}.md</code></li><li>Publish the release</li></ol><h3 id="publish-gem-manually" tabindex="-1">Publish Gem Manually <a class="header-anchor" href="#publish-gem-manually" aria-label="Permalink to &quot;Publish Gem Manually&quot;">​</a></h3><p>If gem publication fails:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber_trackr_live.gemspec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber_trackr_live-{version}.gem</span></span></code></pre></div><h2 id="file-dependencies" tabindex="-1">File Dependencies <a class="header-anchor" href="#file-dependencies" aria-label="Permalink to &quot;File Dependencies&quot;">​</a></h2><p>Understanding what depends on what:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openapi/openapi.yaml (SOURCE OF TRUTH)</span></span>
<span class="line"><span>    ├── lib/cyber_trackr_client/ (GENERATED - never edit manually)</span></span>
<span class="line"><span>    │   └── version.rb (GENERATED from OpenAPI)</span></span>
<span class="line"><span>    ├── cyber_trackr_live.gemspec (reads from version.rb)</span></span>
<span class="line"><span>    ├── package.json (synced by rake task)</span></span>
<span class="line"><span>    ├── site/index.html (GENERATED - Scalar docs)</span></span>
<span class="line"><span>    └── git tags (created from OpenAPI version)</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Never edit generated files manually</strong> - Always regenerate</li><li><strong>Always validate OpenAPI before regenerating</strong> - Prevents broken clients</li><li><strong>Test immediately after regeneration</strong> - Catch issues early</li><li><strong>Version consistently</strong> - Use semantic versioning principles</li><li><strong>Document breaking changes</strong> - Be explicit in changelog and release notes</li><li><strong>Monitor CI/CD</strong> - Ensure releases complete successfully</li></ol><h2 id="integration-with-other-projects" tabindex="-1">Integration with Other Projects <a class="header-anchor" href="#integration-with-other-projects" aria-label="Permalink to &quot;Integration with Other Projects&quot;">​</a></h2><p>This gem is designed to be used by other MITRE projects:</p><ul><li><strong>inspec-xccdf-mapper</strong> - Uses this gem to fetch STIG data reliably</li><li><strong>Future projects</strong> - Can depend on this stable API client</li></ul><p>The release process ensures reliability for downstream consumers.</p><h2 id="version-history" tabindex="-1">Version History <a class="header-anchor" href="#version-history" aria-label="Permalink to &quot;Version History&quot;">​</a></h2><p>See the changelogs for complete version history:</p><ul><li><a href="/reference/changelog-openapi.html">OpenAPI Changes</a></li><li><a href="/reference/changelog-ruby.html">Ruby Gem Changes</a></li></ul>`,85))])}const v=t(d,[["render",k]]);export{C as __pageData,v as default};
