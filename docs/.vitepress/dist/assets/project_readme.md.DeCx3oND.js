import{_ as a,c as e,o as i,at as n}from"./chunks/framework.BV4VMCSO.js";const k=JSON.parse('{"title":"cyber-trackr-live","description":"OpenAPI specification and Ruby client for the cyber.trackr.live API","frontmatter":{"title":"cyber-trackr-live","description":"OpenAPI specification and Ruby client for the cyber.trackr.live API","layout":"doc","sidebar":true},"headers":[],"relativePath":"project/readme.md","filePath":"project/readme.md"}'),t={name:"project/readme.md"};function l(p,s,r,o,h,c){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="cyber-trackr-live" tabindex="-1">cyber-trackr-live <a class="header-anchor" href="#cyber-trackr-live" aria-label="Permalink to &quot;cyber-trackr-live&quot;">‚Äã</a></h1><p>OpenAPI specification and Ruby client for the <a href="https://cyber.trackr.live" target="_blank" rel="noreferrer">cyber.trackr.live</a> API - providing programmatic access to DISA STIGs, SRGs, RMF controls, CCIs, and SCAP data.</p><h2 id="üéØ-overview" tabindex="-1">üéØ Overview <a class="header-anchor" href="#üéØ-overview" aria-label="Permalink to &quot;üéØ Overview&quot;">‚Äã</a></h2><p>This repository contains:</p><ul><li><strong>OpenAPI 3.1.1 Specification</strong> - Complete API documentation for cyber.trackr.live</li><li><strong>Ruby Client Library</strong> - Generated client with helper utilities</li><li><strong>Documentation</strong> - Interactive API docs via Scalar</li><li><strong>Examples</strong> - Usage examples for common workflows</li></ul><h2 id="üìö-quick-links" tabindex="-1">üìö Quick Links <a class="header-anchor" href="#üìö-quick-links" aria-label="Permalink to &quot;üìö Quick Links&quot;">‚Äã</a></h2><ul><li><a href="https://mitre.github.io/cyber-trackr-live/" target="_blank" rel="noreferrer">API Documentation</a> - Interactive Scalar docs</li><li><a href="https://rubygems.org/gems/cyber_trackr_live" target="_blank" rel="noreferrer">Ruby Gem</a> - Install with <code>gem install cyber_trackr_live</code></li><li><a href="openapi/openapi.yaml">OpenAPI Spec</a> - OpenAPI 3.1.1 specification</li><li><a href="/reference/changelog-openapi.html">API Changelog</a> - API specification changes</li><li><a href="/reference/changelog-ruby.html">Gem Changelog</a> - Ruby client changes</li></ul><h2 id="üíé-installation" tabindex="-1">üíé Installation <a class="header-anchor" href="#üíé-installation" aria-label="Permalink to &quot;üíé Installation&quot;">‚Äã</a></h2><h3 id="ruby-gem" tabindex="-1">Ruby Gem <a class="header-anchor" href="#ruby-gem" aria-label="Permalink to &quot;Ruby Gem&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber_trackr_live</span></span></code></pre></div><p>Or add to your Gemfile:</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gem </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cyber_trackr_live&#39;</span></span></code></pre></div><p>See <a href="/clients/ruby/">README-GEM.md</a> for detailed Ruby usage instructions.</p><h3 id="using-the-openapi-spec" tabindex="-1">Using the OpenAPI Spec <a class="header-anchor" href="#using-the-openapi-spec" aria-label="Permalink to &quot;Using the OpenAPI Spec&quot;">‚Äã</a></h3><p>The OpenAPI specification can be used to generate clients in other languages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example: Generate a Python client</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PWD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:/local&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  openapitools/openapi-generator-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /local/openapi/openapi.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /local/generated/python</span></span></code></pre></div><h2 id="üîó-disa-ecosystem-overview" tabindex="-1">üîó DISA Ecosystem Overview <a class="header-anchor" href="#üîó-disa-ecosystem-overview" aria-label="Permalink to &quot;üîó DISA Ecosystem Overview&quot;">‚Äã</a></h2><p>The cyber.trackr.live API provides access to the complete DISA cybersecurity compliance hierarchy:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NIST RMF Controls (high-level policy framework)</span></span>
<span class="line"><span>    ‚Üì (decomposed into atomic, testable statements)</span></span>
<span class="line"><span>CCIs (Control Correlation Identifiers - bridge policy to implementation)</span></span>
<span class="line"><span>    ‚Üì (grouped by technology class into generic requirements)</span></span>
<span class="line"><span>SRGs (Security Requirements Guides - technology class &quot;what&quot; to do)</span></span>
<span class="line"><span>    ‚Üì (implemented as vendor-specific &quot;how&quot; to do it)</span></span>
<span class="line"><span>STIGs (Security Technical Implementation Guides - vendor/product specific)</span></span>
<span class="line"><span>    ‚Üì (automated versions for scanning tools)</span></span>
<span class="line"><span>SCAP (Security Content Automation Protocol documents)</span></span></code></pre></div><h3 id="key-id-types" tabindex="-1">Key ID Types <a class="header-anchor" href="#key-id-types" aria-label="Permalink to &quot;Key ID Types&quot;">‚Äã</a></h3><ul><li><strong>V-IDs</strong>: <code>V-214518</code> - Legacy &quot;Vulnerability IDs&quot;, actually requirement identifiers</li><li><strong>SV-IDs</strong>: <code>SV-214518r997541_rule</code> - XCCDF rule IDs with revision tracking</li><li><strong>SRG-IDs</strong>: <code>SRG-NET-000015-ALG-000016</code> - Security Requirements Guide groupings</li><li><strong>CCI-IDs</strong>: <code>CCI-000213</code> - Control Correlation Identifiers (map to RMF controls)</li><li><strong>RMF Controls</strong>: <code>AC-1</code>, <code>AU-2</code> - Risk Management Framework controls</li></ul><h2 id="üìä-api-scale-coverage" tabindex="-1">üìä API Scale &amp; Coverage <a class="header-anchor" href="#üìä-api-scale-coverage" aria-label="Permalink to &quot;üìä API Scale &amp; Coverage&quot;">‚Äã</a></h2><ul><li><strong>1000+ STIG/SRG documents</strong></li><li><strong>3000+ Control Correlation Identifiers (CCIs)</strong></li><li><strong>100+ RMF controls</strong> in revisions 4 and 5</li><li><strong>87 SCAP documents</strong> for automated scanning</li><li><strong>Complete cross-reference mappings</strong> between all document types</li></ul><h2 id="üõ†Ô∏è-development" tabindex="-1">üõ†Ô∏è Development <a class="header-anchor" href="#üõ†Ô∏è-development" aria-label="Permalink to &quot;üõ†Ô∏è Development&quot;">‚Äã</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">‚Äã</a></h3><ul><li>Ruby 3.3+ (see <code>.ruby-version</code>)</li><li>Node.js 22+ (see <code>.nvmrc</code>)</li><li>Docker (for client generation)</li></ul><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clone the repository</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/mitre/cyber-trackr-live.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber-trackr-live</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Ruby dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Node dependencies for docs (optional - only for OpenAPI docs)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="development-workflows" tabindex="-1">Development Workflows <a class="header-anchor" href="#development-workflows" aria-label="Permalink to &quot;Development Workflows&quot;">‚Äã</a></h3><h4 id="working-on-the-openapi-specification" tabindex="-1">Working on the OpenAPI Specification <a class="header-anchor" href="#working-on-the-openapi-specification" aria-label="Permalink to &quot;Working on the OpenAPI Specification&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Validate the OpenAPI spec (using Spectral)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:validate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Preview API docs locally</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Opens at http://localhost:4000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Regenerate Ruby client after spec changes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span></code></pre></div><h4 id="ruby-development" tabindex="-1">Ruby Development <a class="header-anchor" href="#ruby-development" aria-label="Permalink to &quot;Ruby Development&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests before committing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run linting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rubocop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test the gem build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber_trackr_live.gemspec</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use the gem locally</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> irb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cyber_trackr_helper</span></span></code></pre></div><h4 id="documentation-development" tabindex="-1">Documentation Development <a class="header-anchor" href="#documentation-development" aria-label="Permalink to &quot;Documentation Development&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate YARD docs for Ruby code</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build complete documentation site</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start local Scalar docs server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs-serve</span></span></code></pre></div><h3 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">‚Äã</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cyber-trackr-live/</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ openapi/                   # OpenAPI specification</span></span>
<span class="line"><span>‚îÇ   ‚îî‚îÄ‚îÄ openapi.yaml          # Main spec file</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ lib/                      # Ruby implementation</span></span>
<span class="line"><span>‚îÇ   ‚îú‚îÄ‚îÄ cyber_trackr_client/  # Generated client</span></span>
<span class="line"><span>‚îÇ   ‚îú‚îÄ‚îÄ cyber_trackr_helper/  # Helper utilities</span></span>
<span class="line"><span>‚îÇ   ‚îî‚îÄ‚îÄ rubocop/             # Custom cops</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ test/                     # Test suite</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ examples/                 # Usage examples</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ scripts/                  # Development scripts</span></span>
<span class="line"><span>‚îî‚îÄ‚îÄ docs/                     # Documentation</span></span></code></pre></div><h2 id="üß™-testing" tabindex="-1">üß™ Testing <a class="header-anchor" href="#üß™-testing" aria-label="Permalink to &quot;üß™ Testing&quot;">‚Äã</a></h2><p>The project uses a two-tier testing approach with clear separation of concerns:</p><h3 id="openapi-validation-node-js-spectral" tabindex="-1">OpenAPI Validation (Node.js/Spectral) <a class="header-anchor" href="#openapi-validation-node-js-spectral" aria-label="Permalink to &quot;OpenAPI Validation (Node.js/Spectral)&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Validate OpenAPI spec - professional-grade validation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:validate</span></span></code></pre></div><h3 id="ruby-testing-core-functionality" tabindex="-1">Ruby Testing (Core Functionality) <a class="header-anchor" href="#ruby-testing-core-functionality" aria-label="Permalink to &quot;Ruby Testing (Core Functionality)&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run core gem tests (fast - default)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run all tests including live API integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run live API integration tests only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:stage2b</span></span></code></pre></div><h3 id="test-architecture" tabindex="-1">Test Architecture <a class="header-anchor" href="#test-architecture" aria-label="Permalink to &quot;Test Architecture&quot;">‚Äã</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê</span></span>
<span class="line"><span>‚îÇ   Spectral      ‚îÇ    ‚îÇ Ruby Testing    ‚îÇ</span></span>
<span class="line"><span>‚îÇ   (Node.js)     ‚îÇ    ‚îÇ                 ‚îÇ</span></span>
<span class="line"><span>‚îÇ                 ‚îÇ    ‚îÇ                 ‚îÇ</span></span>
<span class="line"><span>‚îÇ ‚Ä¢ OpenAPI 3.1   ‚îÇ    ‚îÇ ‚Ä¢ Core gem      ‚îÇ</span></span>
<span class="line"><span>‚îÇ ‚Ä¢ Syntax valid  ‚îÇ    ‚îÇ ‚Ä¢ Helper methods‚îÇ</span></span>
<span class="line"><span>‚îÇ ‚Ä¢ Best practice ‚îÇ    ‚îÇ ‚Ä¢ Live API      ‚îÇ</span></span>
<span class="line"><span>‚îÇ ‚Ä¢ Custom rules  ‚îÇ    ‚îÇ ‚Ä¢ Integration   ‚îÇ</span></span>
<span class="line"><span>‚îÇ ‚Ä¢ DISA patterns ‚îÇ    ‚îÇ ‚Ä¢ Business logic‚îÇ</span></span>
<span class="line"><span>‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</span></span>
<span class="line"><span>        ‚îÇ                       ‚îÇ</span></span>
<span class="line"><span>        ‚ñº                       ‚ñº</span></span>
<span class="line"><span>   Static Analysis        Dynamic Testing</span></span>
<span class="line"><span>   (Spec Quality)         (Live API)</span></span></code></pre></div><h3 id="test-suite-details" tabindex="-1">Test Suite Details <a class="header-anchor" href="#test-suite-details" aria-label="Permalink to &quot;Test Suite Details&quot;">‚Äã</a></h3><ol><li><strong>Spectral Validation</strong> - Professional OpenAPI 3.1 validation with custom DISA rules</li><li><strong>Core Gem Tests</strong> - Tests helper methods and gem functionality</li><li><strong>Live API Tests</strong> - Tests against live cyber.trackr.live API responses</li><li><strong>Integration Tests</strong> - End-to-end workflow testing</li></ol><h2 id="‚ö†Ô∏è-important-api-notes" tabindex="-1">‚ö†Ô∏è Important API Notes <a class="header-anchor" href="#‚ö†Ô∏è-important-api-notes" aria-label="Permalink to &quot;‚ö†Ô∏è Important API Notes&quot;">‚Äã</a></h2><h3 id="mixed-endpoints" tabindex="-1">Mixed Endpoints <a class="header-anchor" href="#mixed-endpoints" aria-label="Permalink to &quot;Mixed Endpoints&quot;">‚Äã</a></h3><p>SRGs and STIGs are served from the same <code>/stig</code> endpoint despite being conceptually different:</p><ul><li><strong>SRGs</strong>: Generic technology requirements (e.g., &quot;Configure the ALG to...&quot;)</li><li><strong>STIGs</strong>: Vendor-specific implementation (e.g., &quot;show configuration system services ssh&quot;)</li></ul><p>Use the Ruby helper&#39;s <code>is_srg?()</code> method or name patterns to distinguish them.</p><h3 id="known-issues" tabindex="-1">Known Issues <a class="header-anchor" href="#known-issues" aria-label="Permalink to &quot;Known Issues&quot;">‚Äã</a></h3><ul><li><strong>Error Codes</strong>: Invalid parameters return 500 (not 404)</li><li><strong>Date Formats</strong>: Some dates have leading spaces or inconsistent formats</li></ul><h3 id="rate-limiting" tabindex="-1">Rate Limiting <a class="header-anchor" href="#rate-limiting" aria-label="Permalink to &quot;Rate Limiting&quot;">‚Äã</a></h3><p>The API appears to accept reasonable request rates, but be respectful:</p><ul><li>Use delays between requests (helper defaults to 100ms)</li><li>Cache responses when possible</li><li>Avoid unnecessary bulk downloads</li></ul><h2 id="ü§ù-contributing" tabindex="-1">ü§ù Contributing <a class="header-anchor" href="#ü§ù-contributing" aria-label="Permalink to &quot;ü§ù Contributing&quot;">‚Äã</a></h2><p>See <a href="./contributing.html">Contributing Guide</a> for development setup and contribution guidelines.</p><h2 id="üìÑ-license" tabindex="-1">üìÑ License <a class="header-anchor" href="#üìÑ-license" aria-label="Permalink to &quot;üìÑ License&quot;">‚Äã</a></h2><p>This project is licensed under the Apache License 2.0 - see <a href="./license.html">License</a> for details.</p><h2 id="üè¢-acknowledgments" tabindex="-1">üè¢ Acknowledgments <a class="header-anchor" href="#üè¢-acknowledgments" aria-label="Permalink to &quot;üè¢ Acknowledgments&quot;">‚Äã</a></h2><p>Created and maintained by <a href="https://www.mitre.org/" target="_blank" rel="noreferrer">MITRE</a> as part of the Security Automation Framework (SAF).</p><hr><p><em>This is an unofficial, community-maintained project. Not affiliated with DISA or cyber.trackr.live.</em></p>`,65)]))}const g=a(t,[["render",l]]);export{k as __pageData,g as default};
