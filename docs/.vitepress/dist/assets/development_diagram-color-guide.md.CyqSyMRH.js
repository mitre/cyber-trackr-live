import{_ as c,C as A,c as f,o as r,at as d,b as s,j as i,w as t,a,G as l,au as n}from"./chunks/framework.BV4VMCSO.js";const y=JSON.parse('{"title":"Diagram Color Guide","description":"","frontmatter":{},"headers":[],"relativePath":"development/diagram-color-guide.md","filePath":"development/diagram-color-guide.md"}'),h={name:"development/diagram-color-guide.md"};function p(g,e,u,m,b,C){const o=A("Mermaid");return r(),f("div",null,[e[4]||(e[4]=d('<h1 id="diagram-color-guide" tabindex="-1">Diagram Color Guide <a class="header-anchor" href="#diagram-color-guide" aria-label="Permalink to &quot;Diagram Color Guide&quot;">​</a></h1><p>This guide establishes accessible color standards for Mermaid diagrams throughout the cyber.trackr.live documentation, ensuring compatibility with both light/dark modes and color-blind accessibility, aligned with <a href="https://mitre.github.io/kube-secure-scanner/contributing/diagram-color-guide/" target="_blank" rel="noreferrer">MITRE&#39;s diagram color standards</a>.</p><h2 id="accessibility-first-color-palette" tabindex="-1">Accessibility-First Color Palette <a class="header-anchor" href="#accessibility-first-color-palette" aria-label="Permalink to &quot;Accessibility-First Color Palette&quot;">​</a></h2><h3 id="light-dark-mode-compatible-colors" tabindex="-1">Light/Dark Mode Compatible Colors <a class="header-anchor" href="#light-dark-mode-compatible-colors" aria-label="Permalink to &quot;Light/Dark Mode Compatible Colors&quot;">​</a></h3>',4)),(r(),s(n,null,{default:t(()=>[l(o,{id:"mermaid-12",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5BSuccess%3Cbr%2F%3ELight%20%26%20Dark%20Safe%5D%20%0A%20%20%20%20B%5BProcess%3Cbr%2F%3EHigh%20Contrast%5D%0A%20%20%20%20C%5BInfo%3Cbr%2F%3EUniversal%20Blue%5D%0A%20%20%20%20D%5BExternal%3Cbr%2F%3EAccessible%20Red%5D%0A%20%20%20%20%0A%20%20%20%20%25%25%20Colors%20optimized%20for%20both%20light%20and%20dark%20themes%20%2B%20color-blind%20accessibility%0A%20%20%20%20style%20A%20fill%3A%2328a745%2Cstroke%3A%231e7e34%2Cstroke-width%3A3px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20B%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A3px%2Ccolor%3A%23000000%20%20%0A%20%20%20%20style%20C%20fill%3A%23007bff%2Cstroke%3A%230056b3%2Cstroke-width%3A3px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20D%20fill%3A%23dc3545%2Cstroke%3A%23bd2130%2Cstroke-width%3A3px%2Ccolor%3A%23ffffff%0A"})]),fallback:t(()=>e[0]||(e[0]=[a(" Loading... ")])),_:1})),e[5]||(e[5]=d('<h3 id="accessible-color-standards" tabindex="-1">Accessible Color Standards <a class="header-anchor" href="#accessible-color-standards" aria-label="Permalink to &quot;Accessible Color Standards&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Purpose</th><th>Light Mode</th><th>Dark Mode</th><th>Color-Blind Safe</th><th>WCAG Compliant</th></tr></thead><tbody><tr><td><strong>Success/Complete</strong></td><td><code>#28a745</code></td><td><code>#28a745</code></td><td>✅ Deuteranopia</td><td>AAA (4.5:1)</td></tr><tr><td><strong>Process/Warning</strong></td><td><code>#fd7e14</code></td><td><code>#fd7e14</code></td><td>✅ Protanopia</td><td>AAA (4.5:1)</td></tr><tr><td><strong>Info/Source</strong></td><td><code>#007bff</code></td><td><code>#007bff</code></td><td>✅ Tritanopia</td><td>AAA (4.5:1)</td></tr><tr><td><strong>External/Error</strong></td><td><code>#dc3545</code></td><td><code>#dc3545</code></td><td>✅ All Types</td><td>AAA (4.5:1)</td></tr></tbody></table><h3 id="color-blind-simulation" tabindex="-1">Color-Blind Simulation <a class="header-anchor" href="#color-blind-simulation" aria-label="Permalink to &quot;Color-Blind Simulation&quot;">​</a></h3>',3)),(r(),s(n,null,{default:t(()=>[l(o,{id:"mermaid-110",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20subgraph%20%22Normal%20Vision%22%0A%20%20%20%20%20%20%20%20A1%5BSuccess%20%2328a745%5D%20%0A%20%20%20%20%20%20%20%20B1%5BProcess%20%23fd7e14%5D%0A%20%20%20%20%20%20%20%20C1%5BInfo%20%23007bff%5D%0A%20%20%20%20%20%20%20%20D1%5BExternal%20%23dc3545%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22Deuteranopia%20(Green-Blind)%22%0A%20%20%20%20%20%20%20%20A2%5BStill%20Distinguishable%5D%20%0A%20%20%20%20%20%20%20%20B2%5BOrange%20Remains%20Orange%5D%0A%20%20%20%20%20%20%20%20C2%5BBlue%20Unchanged%5D%0A%20%20%20%20%20%20%20%20D2%5BRed%20Visible%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%22Protanopia%20(Red-Blind)%22%20%0A%20%20%20%20%20%20%20%20A3%5BGreen%20Preserved%5D%0A%20%20%20%20%20%20%20%20B3%5BOrange%20Visible%5D%0A%20%20%20%20%20%20%20%20C3%5BBlue%20Clear%5D%0A%20%20%20%20%20%20%20%20D3%5BAppears%20Different%20but%20Distinct%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20style%20A1%20fill%3A%2328a745%2Cstroke%3A%231e7e34%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20B1%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A2px%2Ccolor%3A%23000000%0A%20%20%20%20style%20C1%20fill%3A%23007bff%2Cstroke%3A%230056b3%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20D1%20fill%3A%23dc3545%2Cstroke%3A%23bd2130%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20%0A%20%20%20%20style%20A2%20fill%3A%2328a745%2Cstroke%3A%231e7e34%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20B2%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A2px%2Ccolor%3A%23000000%0A%20%20%20%20style%20C2%20fill%3A%23007bff%2Cstroke%3A%230056b3%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20D2%20fill%3A%23dc3545%2Cstroke%3A%23bd2130%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20%0A%20%20%20%20style%20A3%20fill%3A%2328a745%2Cstroke%3A%231e7e34%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20B3%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A2px%2Ccolor%3A%23000000%0A%20%20%20%20style%20C3%20fill%3A%23007bff%2Cstroke%3A%230056b3%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20D3%20fill%3A%23dc3545%2Cstroke%3A%23bd2130%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A"})]),fallback:t(()=>e[1]||(e[1]=[a(" Loading... ")])),_:1})),e[6]||(e[6]=i("h2",{id:"usage-examples",tabindex:"-1"},[a("Usage Examples "),i("a",{class:"header-anchor",href:"#usage-examples","aria-label":'Permalink to "Usage Examples"'},"​")],-1)),e[7]||(e[7]=i("h3",{id:"two-tier-testing-architecture",tabindex:"-1"},[a("Two-Tier Testing Architecture "),i("a",{class:"header-anchor",href:"#two-tier-testing-architecture","aria-label":'Permalink to "Two-Tier Testing Architecture"'},"​")],-1)),(r(),s(n,null,{default:t(()=>[l(o,{id:"mermaid-117",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5BOpenAPI%20Specification%5D%20--%3E%20B%5BTier%201%3A%20Validation%5D%0A%20%20%20%20A%20--%3E%20C%5BTier%202%3A%20Testing%5D%0A%20%20%20%20B%20--%3E%20D%5B%E2%9C%85%20Spec%20Valid%5D%0A%20%20%20%20C%20--%3E%20E%5B%E2%9C%85%20API%20Works%5D%0A%20%20%20%20D%20--%3E%20F%5BDeploy%20Documentation%5D%0A%20%20%20%20E%20--%3E%20F%0A%20%20%20%20%0A%20%20%20%20style%20A%20fill%3A%23007bff%2Cstroke%3A%230056b3%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A%20%20%20%20style%20B%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A2px%2Ccolor%3A%23000000%0A%20%20%20%20style%20C%20fill%3A%23fd7e14%2Cstroke%3A%23e55100%2Cstroke-width%3A2px%2Ccolor%3A%23000000%0A%20%20%20%20style%20F%20fill%3A%2328a745%2Cstroke%3A%231e7e34%2Cstroke-width%3A2px%2Ccolor%3A%23ffffff%0A"})]),fallback:t(()=>e[2]||(e[2]=[a(" Loading... ")])),_:1})),e[8]||(e[8]=i("h3",{id:"cors-proxy-flow",tabindex:"-1"},[a("CORS Proxy Flow "),i("a",{class:"header-anchor",href:"#cors-proxy-flow","aria-label":'Permalink to "CORS Proxy Flow"'},"​")],-1)),(r(),s(n,null,{default:t(()=>[l(o,{id:"mermaid-121",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20B%20as%20Browser%0A%20%20%20%20participant%20I%20as%20Interceptor%20%20%0A%20%20%20%20participant%20P%20as%20Proxy%0A%20%20%20%20participant%20A%20as%20API%0A%20%20%20%20%0A%20%20%20%20B-%3E%3EI%3A%20fetch(api_url)%0A%20%20%20%20I-%3E%3EP%3A%20proxy_request%0A%20%20%20%20P-%3E%3EA%3A%20forwarded_request%0A%20%20%20%20A--%3E%3EP%3A%20api_response%0A%20%20%20%20P--%3E%3EI%3A%20proxied_response%0A%20%20%20%20I--%3E%3EB%3A%20%E2%9C%85%20success%0A"})]),fallback:t(()=>e[3]||(e[3]=[a(" Loading... ")])),_:1})),e[9]||(e[9]=d(`<h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="_1-consistent-application" tabindex="-1">1. <strong>Consistent Application</strong> <a class="header-anchor" href="#_1-consistent-application" aria-label="Permalink to &quot;1. **Consistent Application**&quot;">​</a></h3><ul><li>Always use the same color for the same concept across all diagrams</li><li>Apply both fill and stroke colors for visual consistency</li><li>Use 2px stroke width for standard diagrams</li></ul><h3 id="_2-semantic-meaning" tabindex="-1">2. <strong>Semantic Meaning</strong> <a class="header-anchor" href="#_2-semantic-meaning" aria-label="Permalink to &quot;2. **Semantic Meaning**&quot;">​</a></h3><ul><li><strong>Green</strong>: Successful outcomes, working systems, final results</li><li><strong>Yellow</strong>: Intermediate processes, transformations, decision logic</li><li><strong>Blue</strong>: Input data, specifications, configuration sources</li><li><strong>Red</strong>: External dependencies, third-party services, potential failure points</li></ul><h3 id="_3-accessibility" tabindex="-1">3. <strong>Accessibility</strong> <a class="header-anchor" href="#_3-accessibility" aria-label="Permalink to &quot;3. **Accessibility**&quot;">​</a></h3><ul><li>All colors provide sufficient contrast for readability</li><li>Color meanings are reinforced with icons and text labels</li><li>Diagrams remain understandable in grayscale</li></ul><h3 id="_4-mermaid-syntax" tabindex="-1">4. <strong>Mermaid Syntax</strong> <a class="header-anchor" href="#_4-mermaid-syntax" aria-label="Permalink to &quot;4. **Mermaid Syntax**&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>%% Standard color application syntax:</span></span>
<span class="line"><span>style NodeId fill:#colorcode,stroke:#strokecode,stroke-width:2px</span></span></code></pre></div><h2 id="diagram-types" tabindex="-1">Diagram Types <a class="header-anchor" href="#diagram-types" aria-label="Permalink to &quot;Diagram Types&quot;">​</a></h2><h3 id="architecture-diagrams" tabindex="-1">Architecture Diagrams <a class="header-anchor" href="#architecture-diagrams" aria-label="Permalink to &quot;Architecture Diagrams&quot;">​</a></h3><ul><li>Focus on system components and data flow</li><li>Use green for stable/working components</li><li>Use yellow for processing/transformation layers</li><li>Use blue for data sources and specifications</li><li>Use red sparingly for external dependencies</li></ul><h3 id="sequence-diagrams" tabindex="-1">Sequence Diagrams <a class="header-anchor" href="#sequence-diagrams" aria-label="Permalink to &quot;Sequence Diagrams&quot;">​</a></h3><ul><li>Participants colored by their role/ownership</li><li>Success paths end in green</li><li>Error conditions highlighted in red</li><li>Processing steps in yellow</li></ul><h3 id="mind-maps" tabindex="-1">Mind Maps <a class="header-anchor" href="#mind-maps" aria-label="Permalink to &quot;Mind Maps&quot;">​</a></h3><ul><li>Central concepts in blue (info)</li><li>Branching categories in yellow (process)</li><li>Implementation details in green (success)</li><li>External factors in red (external)</li></ul><h2 id="integration-with-mitre-standards" tabindex="-1">Integration with MITRE Standards <a class="header-anchor" href="#integration-with-mitre-standards" aria-label="Permalink to &quot;Integration with MITRE Standards&quot;">​</a></h2><p>This color guide aligns with <a href="https://mitre.github.io/kube-secure-scanner/contributing/diagram-color-guide/" target="_blank" rel="noreferrer">MITRE&#39;s established standards</a> to:</p><ul><li><strong>Maintain consistency</strong> across MITRE documentation</li><li><strong>Improve readability</strong> through familiar color associations</li><li><strong>Support accessibility</strong> with high-contrast combinations</li><li><strong>Enable reuse</strong> of patterns across projects</li></ul><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>When adding new diagrams:</p><ol><li><strong>Choose colors</strong> based on semantic meaning, not aesthetics</li><li><strong>Apply consistently</strong> throughout the entire diagram</li><li><strong>Test accessibility</strong> by viewing in grayscale</li><li><strong>Document new patterns</strong> if they don&#39;t fit existing categories</li></ol><p>This ensures our documentation maintains professional standards while clearly communicating complex technical concepts.</p>`,23))])}const x=c(h,[["render",p]]);export{y as __pageData,x as default};
