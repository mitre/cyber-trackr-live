import{_ as i,c as t,o as s,at as r}from"./chunks/framework.BV4VMCSO.js";const p=JSON.parse('{"title":"Security Policy","description":"Security vulnerability reporting and policies for cyber-trackr-live","frontmatter":{"title":"Security Policy","description":"Security vulnerability reporting and policies for cyber-trackr-live","layout":"doc","sidebar":true},"headers":[],"relativePath":"project/security.md","filePath":"project/security.md"}'),a={name:"project/security.md"};function n(o,e,l,c,u,d){return s(),t("div",null,e[0]||(e[0]=[r(`<h1 id="security-policy" tabindex="-1">Security Policy <a class="header-anchor" href="#security-policy" aria-label="Permalink to &quot;Security Policy&quot;">​</a></h1><h2 id="reporting-security-issues" tabindex="-1">Reporting Security Issues <a class="header-anchor" href="#reporting-security-issues" aria-label="Permalink to &quot;Reporting Security Issues&quot;">​</a></h2><p>The MITRE SAF team takes security seriously. If you discover a security vulnerability in the cyber-trackr-live project, please report it responsibly.</p><h3 id="contact-information" tabindex="-1">Contact Information <a class="header-anchor" href="#contact-information" aria-label="Permalink to &quot;Contact Information&quot;">​</a></h3><ul><li><strong>Email</strong>: <a href="mailto:saf-security@mitre.org" target="_blank" rel="noreferrer">saf-security@mitre.org</a></li><li><strong>GitHub</strong>: Use the <a href="https://github.com/mitre/cyber-trackr-live/security" target="_blank" rel="noreferrer">Security tab</a> to report vulnerabilities privately</li></ul><h3 id="what-to-include" tabindex="-1">What to Include <a class="header-anchor" href="#what-to-include" aria-label="Permalink to &quot;What to Include&quot;">​</a></h3><p>When reporting security issues, please provide:</p><ol><li><strong>Description</strong> of the vulnerability</li><li><strong>Steps to reproduce</strong> the issue</li><li><strong>Potential impact</strong> assessment</li><li><strong>Suggested fix</strong> (if you have one)</li></ol><h3 id="response-timeline" tabindex="-1">Response Timeline <a class="header-anchor" href="#response-timeline" aria-label="Permalink to &quot;Response Timeline&quot;">​</a></h3><ul><li><strong>Acknowledgment</strong>: Within 48 hours</li><li><strong>Initial Assessment</strong>: Within 7 days</li><li><strong>Fix Timeline</strong>: Varies by severity</li></ul><h2 id="security-best-practices" tabindex="-1">Security Best Practices <a class="header-anchor" href="#security-best-practices" aria-label="Permalink to &quot;Security Best Practices&quot;">​</a></h2><h3 id="for-users" tabindex="-1">For Users <a class="header-anchor" href="#for-users" aria-label="Permalink to &quot;For Users&quot;">​</a></h3><ul><li><strong>Keep Updated</strong>: Use the latest version of the plugin</li><li><strong>Secure Credentials</strong>: Never commit passwords or SSH keys to version control</li><li><strong>Use SSH Keys</strong>: Prefer SSH key authentication over passwords</li><li><strong>Network Security</strong>: Use VPNs and secure networks when connecting to network devices</li></ul><h3 id="for-contributors" tabindex="-1">For Contributors <a class="header-anchor" href="#for-contributors" aria-label="Permalink to &quot;For Contributors&quot;">​</a></h3><ul><li><strong>Dependency Scanning</strong>: Run <code>bundle audit</code> before submitting PRs</li><li><strong>Credential Handling</strong>: Never log or expose credentials in code</li><li><strong>Input Validation</strong>: Sanitize all user inputs</li><li><strong>Test Security</strong>: Include security tests for new features</li></ul><h2 id="supported-versions" tabindex="-1">Supported Versions <a class="header-anchor" href="#supported-versions" aria-label="Permalink to &quot;Supported Versions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Version</th><th>Supported</th></tr></thead><tbody><tr><td>0.1.x</td><td>✅ Yes</td></tr></tbody></table><h2 id="security-testing" tabindex="-1">Security Testing <a class="header-anchor" href="#security-testing" aria-label="Permalink to &quot;Security Testing&quot;">​</a></h2><p>The plugin includes comprehensive security testing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run security test suite</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruby</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test/security/security_test.rb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check for vulnerable dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bundle-audit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> check</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Scan for potential security issues</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brakeman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-pager</span></span></code></pre></div><h2 id="known-security-considerations" tabindex="-1">Known Security Considerations <a class="header-anchor" href="#known-security-considerations" aria-label="Permalink to &quot;Known Security Considerations&quot;">​</a></h2><h3 id="network-device-access" tabindex="-1">Network Device Access <a class="header-anchor" href="#network-device-access" aria-label="Permalink to &quot;Network Device Access&quot;">​</a></h3><ul><li>Train-Juniper requires SSH access to network infrastructure</li><li>Ensure proper network segmentation and access controls</li><li>Use dedicated service accounts with minimal required privileges</li></ul><h3 id="credential-management" tabindex="-1">Credential Management <a class="header-anchor" href="#credential-management" aria-label="Permalink to &quot;Credential Management&quot;">​</a></h3><ul><li>Plugin supports environment variables for credential management</li><li>Consider using secrets management systems in production</li><li>Rotate credentials regularly</li></ul><h3 id="logging-and-debugging" tabindex="-1">Logging and Debugging <a class="header-anchor" href="#logging-and-debugging" aria-label="Permalink to &quot;Logging and Debugging&quot;">​</a></h3><ul><li>Debug mode may log sensitive command outputs</li><li>Review log files for credential exposure</li><li>Use <code>-l debug</code> sparingly in production environments</li></ul>`,27)]))}const g=i(a,[["render",n]]);export{p as __pageData,g as default};
